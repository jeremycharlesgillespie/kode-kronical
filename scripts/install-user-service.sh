#!/bin/bash
# User systemd service installer for kode-kronical-daemon
# This creates a user service (no sudo required) that runs when the user logs in

set -e  # Exit on error

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Logging functions
log() {
    echo -e "${GREEN}[$(date +'%H:%M:%S')] $1${NC}"
}

error() {
    echo -e "${RED}[ERROR] $1${NC}" >&2
}

warning() {
    echo -e "${YELLOW}[WARNING] $1${NC}"
}

info() {
    echo -e "${BLUE}[INFO] $1${NC}"
}

# Find kode-kronical-daemon executable
find_daemon() {
    log "Locating kode-kronical-daemon executable..."
    
    DAEMON_PATH=""
    
    # Check .venv first
    if [[ -f "$HOME/.venv/bin/kode-kronical-daemon" ]]; then
        DAEMON_PATH="$HOME/.venv/bin/kode-kronical-daemon"
        info "Found daemon in .venv: $DAEMON_PATH"
    # Check if it's in PATH
    elif command -v kode-kronical-daemon >/dev/null 2>&1; then
        DAEMON_PATH=$(which kode-kronical-daemon)
        info "Found daemon in PATH: $DAEMON_PATH"
    else
        error "Could not find kode-kronical-daemon executable"
        error "Please ensure kode-kronical is installed in a virtual environment"
        exit 1
    fi
    
    # Verify it's executable
    if [[ ! -x "$DAEMON_PATH" ]]; then
        error "Daemon found but not executable: $DAEMON_PATH"
        exit 1
    fi
    
    log "Using daemon at: $DAEMON_PATH"
}

# Create necessary directories
create_directories() {
    log "Creating necessary directories..."
    
    # Create user config directory
    CONFIG_DIR="$HOME/.config/kode-kronical"
    mkdir -p "$CONFIG_DIR"
    chmod 755 "$CONFIG_DIR"
    info "Created config directory: $CONFIG_DIR"
    
    # Create user data directory
    DATA_DIR="$HOME/.local/share/kode-kronical"
    
    # Clean up old files for fresh install
    if [[ -d "$DATA_DIR" ]]; then
        info "Cleaning up old data directory for fresh install..."
        rm -f "$DATA_DIR/daemon.pid" "$DATA_DIR/daemon.log"
        rm -f "$DATA_DIR"/metrics_*.json
    fi
    
    mkdir -p "$DATA_DIR"
    chmod 755 "$DATA_DIR"
    info "Created fresh data directory: $DATA_DIR"
    
    # Create user systemd directory
    SYSTEMD_DIR="$HOME/.config/systemd/user"
    mkdir -p "$SYSTEMD_DIR"
    chmod 755 "$SYSTEMD_DIR"
    info "Created systemd user directory: $SYSTEMD_DIR"
}

# Create default config
create_config() {
    CONFIG_FILE="$HOME/.config/kode-kronical/daemon.yaml"
    
    # Backup existing config if it exists
    if [[ -f "$CONFIG_FILE" ]]; then
        BACKUP_FILE="${CONFIG_FILE}.backup.$(date +%Y%m%d_%H%M%S)"
        cp "$CONFIG_FILE" "$BACKUP_FILE"
        info "Backed up existing config to: $BACKUP_FILE"
    fi
    
    log "Creating config file..."
    
    cat > "$CONFIG_FILE" << EOF
# kode-kronical-daemon user service configuration
# Generated by install script on $(date)
daemon:
  # All paths use user directories
  pid_file: $HOME/.local/share/kode-kronical/daemon.pid
  log_file: $HOME/.local/share/kode-kronical/daemon.log
  data_dir: $HOME/.local/share/kode-kronical
  
  # Monitoring settings
  sample_interval: 1.0
  max_samples: 3600
  data_retention_hours: 24
  enable_network_monitoring: true
EOF
    
    chmod 644 "$CONFIG_FILE"
    info "Created config file: $CONFIG_FILE"
}

# Stop existing daemon if running
stop_existing_daemon() {
    log "Stopping any existing daemon processes..."
    
    # Try to stop user service first
    if systemctl --user is-active --quiet kode-kronical-daemon 2>/dev/null; then
        systemctl --user stop kode-kronical-daemon
        info "Stopped user service"
    fi
    
    # Try to stop via daemon command
    if "$DAEMON_PATH" -c "$HOME/.config/kode-kronical/daemon.yaml" stop 2>/dev/null; then
        info "Stopped daemon via command"
    else
        info "No daemon was running via command"
    fi
    
    # Kill any remaining processes
    if pgrep -f "kode-kronical-daemon" >/dev/null; then
        warning "Killing remaining daemon processes..."
        pkill -f "kode-kronical-daemon" || true
        sleep 1
    fi
}

# Create user systemd service file
create_service_file() {
    log "Creating user systemd service file..."
    
    SERVICE_FILE="$HOME/.config/systemd/user/kode-kronical-daemon.service"
    
    # Backup existing service file if it exists
    if [[ -f "$SERVICE_FILE" ]]; then
        BACKUP_FILE="${SERVICE_FILE}.backup.$(date +%Y%m%d_%H%M%S)"
        cp "$SERVICE_FILE" "$BACKUP_FILE"
        info "Backed up existing service to: $BACKUP_FILE"
    fi
    
    cat > "$SERVICE_FILE" << EOF
[Unit]
Description=kode-kronical System Monitoring Daemon (User Service)
Documentation=https://github.com/jeremycharlesgillespie/kode-kronical
After=graphical-session.target

[Service]
Type=simple
ExecStart=$DAEMON_PATH -c $HOME/.config/kode-kronical/daemon.yaml start --foreground
Restart=on-failure
RestartSec=10
StandardOutput=journal
StandardError=journal
Environment="HOME=$HOME"
Environment="USER=$USER"
WorkingDirectory=$HOME

# Resource limits
LimitNOFILE=4096

[Install]
WantedBy=default.target
EOF

    chmod 644 "$SERVICE_FILE"
    log "Created user service file: $SERVICE_FILE"
}

# Install and start user service
install_service() {
    log "Installing and starting user systemd service..."
    
    # Enable user service lingering (allows service to start without login)
    sudo loginctl enable-linger "$USER" 2>/dev/null || true
    
    # Reload user systemd
    systemctl --user daemon-reload
    info "Reloaded user systemd configuration"
    
    # Enable service (start when user session starts)
    systemctl --user enable kode-kronical-daemon
    info "Enabled user service for automatic startup"
    
    # Start service now
    systemctl --user start kode-kronical-daemon
    info "Started kode-kronical-daemon user service"
    
    # Wait a moment and check status
    sleep 2
    if systemctl --user is-active --quiet kode-kronical-daemon; then
        log "✓ User service started successfully"
    else
        error "✗ User service failed to start"
        systemctl --user status kode-kronical-daemon
        exit 1
    fi
}

# Verify installation
verify_service() {
    log "Verifying user service installation..."
    
    # Check if enabled
    if systemctl --user is-enabled --quiet kode-kronical-daemon; then
        info "✓ User service enabled for startup"
    else
        warning "✗ User service not enabled"
    fi
    
    # Check if active
    if systemctl --user is-active --quiet kode-kronical-daemon; then
        info "✓ User service is running"
        
        # Show status
        echo
        info "User Service Status:"
        systemctl --user status kode-kronical-daemon --no-pager -l
    else
        warning "✗ User service is not running"
    fi
}

# Print usage information
print_usage() {
    echo
    log "USER SERVICE INSTALLATION COMPLETE!"
    echo
    info "Files created/updated:"
    echo "  • Service: $HOME/.config/systemd/user/kode-kronical-daemon.service"
    echo "  • Config:  $HOME/.config/kode-kronical/daemon.yaml"
    echo "  • Data:    $HOME/.local/share/kode-kronical/"
    echo
    info "The kode-kronical-daemon is now installed as a user service and will:"
    echo "  • Start automatically when you log in"
    echo "  • Restart automatically if it crashes"
    echo "  • Run in the background collecting system metrics"
    echo "  • Run as your user (no permission issues)"
    echo
    info "Useful commands:"
    echo "  systemctl --user status kode-kronical-daemon    # Check status"
    echo "  systemctl --user stop kode-kronical-daemon      # Stop service"
    echo "  systemctl --user start kode-kronical-daemon     # Start service"
    echo "  systemctl --user restart kode-kronical-daemon   # Restart service"
    echo "  systemctl --user disable kode-kronical-daemon   # Disable startup"
    echo "  journalctl --user -u kode-kronical-daemon -f    # View live logs"
    echo
    info "Data location: $HOME/.local/share/kode-kronical/"
    echo
}

# Main function
main() {
    log "Starting kode-kronical-daemon USER service installation..."
    
    find_daemon
    create_directories
    create_config
    stop_existing_daemon
    create_service_file
    install_service
    verify_service
    print_usage
    
    log "User service installation completed successfully!"
}

# Handle command line arguments
case "${1:-install}" in
    install)
        main
        ;;
    uninstall)
        log "Uninstalling kode-kronical-daemon user service..."
        systemctl --user stop kode-kronical-daemon 2>/dev/null || true
        systemctl --user disable kode-kronical-daemon 2>/dev/null || true
        rm -f "$HOME/.config/systemd/user/kode-kronical-daemon.service"
        systemctl --user daemon-reload
        log "User service uninstalled"
        ;;
    *)
        echo "Usage: $0 [install|uninstall]"
        echo
        echo "This script installs kode-kronical-daemon as a USER systemd service"
        echo "that automatically starts when you log in and restarts on failure."
        echo "No sudo required!"
        echo
        echo "Examples:"
        echo "  $0 install      # Install and start user service"
        echo "  $0 uninstall    # Stop and remove user service"
        exit 1
        ;;
esac